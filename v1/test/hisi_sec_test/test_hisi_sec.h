/*
 * Copyright 2019 Huawei Technologies Co.,Ltd.All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef __HISI_TEST_SEC_H
#define __HISI_TEST_SEC_H

enum cipher_op_type {
	ENCRYPTION,
	DECRYPTION,
};

enum cipher_alg {
	CIPHER_SM4,
	CIPHER_AES,
	CIPHER_DES,
	CIPHER_3DES,
};

enum cipher_mode {
	ECB,
	CBC,
	CTR,
	XTS,
	OFB
};

struct cipher_testvec {
	const char *key;
	int klen;
	const char *iv;
	int ivlen;
	const char *iv_out;
	const char *ptext;
	const char *ctext;
	int len;
};

/* 192bit */
struct cipher_testvec des3_ecb_tv_template[] = {
	{
	.key	= "\x10\x46\x10\x34\x89\x98\x80\x20"
		  "\x91\x07\xd0\x15\x89\x19\x01\x01"
		  "\x19\x07\x92\x10\x98\x1a\x01\x01",
	.klen	= 24,
	.ptext	= "\x00\x00\x00\x00\x00\x00\x00\x00",
	.ctext	= "\xe1\xef\x62\xc3\x32\xfe\x82\x5b",
	.len	= 8,
	}
};

/* 192bit */
struct cipher_testvec des3_cbc_tv_template[] = {
	{
	.key	= "\xE9\xC0\xFF\x2E\x76\x0B\x64\x24"
		  "\x44\x4D\x99\x5A\x12\xD6\x40\xC0"
		  "\xEA\xC2\x84\xE8\x14\x95\xDB\xE8",
	.klen	= 24,
	.iv	= "\x7D\x33\x88\x93\x0F\x93\xB2\x42",
	.iv_out	= "\x6b\xfa\xb1\x91\x13\xb0\xd9\x19",
	.ptext	= "\x6f\x54\x20\x6f\x61\x4d\x79\x6e"
		  "\x53\x20\x63\x65\x65\x72\x73\x74"
		  "\x54\x20\x6f\x6f\x4d\x20\x6e\x61"
		  "\x20\x79\x65\x53\x72\x63\x74\x65"
		  "\x20\x73\x6f\x54\x20\x6f\x61\x4d"
		  "\x79\x6e\x53\x20\x63\x65\x65\x72"
		  "\x73\x74\x54\x20\x6f\x6f\x4d\x20"
		  "\x6e\x61\x20\x79\x65\x53\x72\x63"
		  "\x74\x65\x20\x73\x6f\x54\x20\x6f"
		  "\x61\x4d\x79\x6e\x53\x20\x63\x65"
		  "\x65\x72\x73\x74\x54\x20\x6f\x6f"
		  "\x4d\x20\x6e\x61\x20\x79\x65\x53"
		  "\x72\x63\x74\x65\x20\x73\x6f\x54"
		  "\x20\x6f\x61\x4d\x79\x6e\x53\x20"
		  "\x63\x65\x65\x72\x73\x74\x54\x20"
		  "\x6f\x6f\x4d\x20\x6e\x61\x0a\x79",
	.ctext	= "\x0e\x2d\xb6\x97\x3c\x56\x33\xf4"
		  "\x67\x17\x21\xc7\x6e\x8a\xd5\x49"
		  "\x74\xb3\x49\x05\xc5\x1c\xd0\xed"
		  "\x12\x56\x5c\x53\x96\xb6\x00\x7d"
		  "\x90\x48\xfc\xf5\x8d\x29\x39\xcc"
		  "\x8a\xd5\x35\x18\x36\x23\x4e\xd7"
		  "\x76\xd1\xda\x0c\x94\x67\xbb\x04"
		  "\x8b\xf2\x03\x6c\xa8\xcf\xb6\xea"
		  "\x22\x64\x47\xaa\x8f\x75\x13\xbf"
		  "\x9f\xc2\xc3\xf0\xc9\x56\xc5\x7a"
		  "\x71\x63\x2e\x89\x7b\x1e\x12\xca"
		  "\xe2\x5f\xaf\xd8\xa4\xf8\xc9\x7a"
		  "\xd6\xf9\x21\x31\x62\x44\x45\xa6"
		  "\xd6\xbc\x5a\xd3\x2d\x54\x43\xcc"
		  "\x9d\xde\xa5\x70\xe9\x42\x45\x8a"
		  "\x6b\xfa\xb1\x91\x13\xb0\xd9\x19",
	.len	= 128,
	}
};

/* 128bit */
struct cipher_testvec aes_ecb_tv_template_128[] = {
	{
	.key	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.klen	= 16,
	.ptext	= "\x00\x11\x22\x33\x44\x55\x66\x77"
		  "\x88\x99\xaa\xbb\xcc\xdd\xee\xff",
	.ctext	= "\x69\xc4\xe0\xd8\x6a\x7b\x04\x30"
		  "\xd8\xcd\xb7\x80\x70\xb4\xc5\x5a",
	.len	= 16,
	}
};

/* 192bit */
struct cipher_testvec aes_ecb_tv_template_192[] = {
	{
	.key	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
		  "\x10\x11\x12\x13\x14\x15\x16\x17",
	.klen	= 24,
	.ptext	= "\x00\x11\x22\x33\x44\x55\x66\x77"
		  "\x88\x99\xaa\xbb\xcc\xdd\xee\xff",
	.ctext	= "\xdd\xa9\x7c\xa4\x86\x4c\xdf\xe0"
		  "\x6e\xaf\x70\xa0\xec\x0d\x71\x91",
	.len	= 16,
	}
};

/* 128bit */
struct cipher_testvec sm4_cbc_tv_template[] = {
	{
	.key	= "\x01\x23\x45\x67\x89\xAB\xCD\xEF"
		  "\xFE\xDC\xBA\x98\x76\x54\x32\x10",
	.klen	= 16,
	.ptext	= "\xaa\xaa\xaa\xaa\xbb\xbb\xbb\xbb"
		  "\xcc\xcc\xcc\xcc\xdd\xdd\xdd\xdd"
		  "\xee\xee\xee\xee\xff\xff\xff\xff"
		  "\xaa\xaa\xaa\xaa\xbb\xbb\xbb\xbb",
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F",
	.iv_out	= "\x4C\xB7\x01\x69\x51\x90\x92\x26"
		  "\x97\x9B\x0D\x15\xDC\x6A\x8F\x6D",
	.ctext	= "\x78\xEB\xB1\x1C\xC4\x0B\x0A\x48"
		  "\x31\x2A\xAE\xB2\x04\x02\x44\xCB"
		  "\x4C\xB7\x01\x69\x51\x90\x92\x26"
		  "\x97\x9B\x0D\x15\xDC\x6A\x8F\x6D",
	.len	= 32,
	}
};

/* 256bit */
struct cipher_testvec sm4_xts_tv_template[] = {
	{
	.key	= "\x11\x11\x11\x11\x11\x11\x11\x11"
		  "\x11\x11\x11\x11\x11\x11\x11\x11"
		  "\x22\x22\x22\x22\x22\x22\x22\x22"
		  "\x22\x22\x22\x22\x22\x22\x22\x22",
	.klen	= 32,
	.iv	= "\x33\x33\x33\x33\x33\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
	.ptext	= "\x44\x44\x44\x44\x44\x44\x44\x44"
		  "\x44\x44\x44\x44\x44\x44\x44\x44"
		  "\x44\x44\x44\x44\x44\x44\x44\x44"
		  "\x44\x44\x44\x44\x44\x44\x44\x44",
	.ctext	= "\x1a\x0a\x09\x5f\xcd\x07\x07\x98"
		  "\x41\x86\x12\xaf\xb3\xd7\x68\x13"
		  "\xed\x81\xcd\x06\x87\x43\x1a\xbb"
		  "\x13\x3d\xd6\x1e\x2b\xe1\x77\xbe",
	.len	= 32,
	}
};

/* 256bit */
struct cipher_testvec aes_ecb_tv_template_256[] = {
	{
	.key	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f",
	.klen	= 32,
	.ptext	= "\x00\x11\x22\x33\x44\x55\x66\x77"
		  "\x88\x99\xaa\xbb\xcc\xdd\xee\xff",
	.ctext	= "\x8e\xa2\xb7\xca\x51\x67\x45\xbf"
		  "\xea\xfc\x49\x90\x4b\x49\x60\x89",
	.len	= 16,
	}
};

/* 256bit */
struct cipher_testvec aes_xts_tv_template_256[] = {
	{
	.key    = "\x11\x11\x11\x11\x11\x11\x11\x11"
		  "\x11\x11\x11\x11\x11\x11\x11\x11"
		  "\x22\x22\x22\x22\x22\x22\x22\x22"
		  "\x22\x22\x22\x22\x22\x22\x22\x22",
	.klen   = 32,
	.iv     = "\x33\x33\x33\x33\x33\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
	.ptext	= "\x44\x44\x44\x44\x44\x44\x44\x44"
		  "\x44\x44\x44\x44\x44\x44\x44\x44"
		  "\x44\x44\x44\x44\x44\x44\x44\x44"
		  "\x44\x44\x44\x44\x44\x44\x44\x44",
	.ctext	= "\xc4\x54\x18\x5e\x6a\x16\x93\x6e"
		  "\x39\x33\x40\x38\xac\xef\x83\x8b"
		  "\xfb\x18\x6f\xff\x74\x80\xad\xc4"
		  "\x28\x93\x82\xec\xd6\xd3\x94\xf0",
	.len	= 32,
	}
};

/* 512bit */
struct cipher_testvec aes_xts_tv_template_512[] = {
	{
	.key	= "\x27\x18\x28\x18\x28\x45\x90\x45"
		  "\x23\x53\x60\x28\x74\x71\x35\x26"
		  "\x62\x49\x77\x57\x24\x70\x93\x69"
		  "\x99\x59\x57\x49\x66\x96\x76\x27"
		  "\x31\x41\x59\x26\x53\x58\x97\x93"
		  "\x23\x84\x62\x64\x33\x83\x27\x95"
		  "\x02\x88\x41\x97\x16\x93\x99\x37"
		  "\x51\x05\x82\x09\x74\x94\x45\x92",
	.klen	= 64,
	.iv	= "\xff\x00\x00\x00\x00\x00\x00\x00"
		  "\x00\x00\x00\x00\x00\x00\x00\x00",
	.ptext	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
		  "\x20\x21\x22\x23\x24\x25\x26\x27"
		  "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
		  "\x30\x31\x32\x33\x34\x35\x36\x37"
		  "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
		  "\x40\x41\x42\x43\x44\x45\x46\x47"
		  "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
		  "\x50\x51\x52\x53\x54\x55\x56\x57"
		  "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
		  "\x60\x61\x62\x63\x64\x65\x66\x67"
		  "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
		  "\x70\x71\x72\x73\x74\x75\x76\x77"
		  "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
		  "\x80\x81\x82\x83\x84\x85\x86\x87"
		  "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
		  "\x90\x91\x92\x93\x94\x95\x96\x97"
		  "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
		  "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
		  "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
		  "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
		  "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
		  "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
		  "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
		  "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
		  "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
		  "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
		  "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
		  "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
		  "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
		  "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
		  "\x10\x11\x12\x13\x14\x15\x16\x17"
		  "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
		  "\x20\x21\x22\x23\x24\x25\x26\x27"
		  "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
		  "\x30\x31\x32\x33\x34\x35\x36\x37"
		  "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
		  "\x40\x41\x42\x43\x44\x45\x46\x47"
		  "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
		  "\x50\x51\x52\x53\x54\x55\x56\x57"
		  "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
		  "\x60\x61\x62\x63\x64\x65\x66\x67"
		  "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
		  "\x70\x71\x72\x73\x74\x75\x76\x77"
		  "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
		  "\x80\x81\x82\x83\x84\x85\x86\x87"
		  "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
		  "\x90\x91\x92\x93\x94\x95\x96\x97"
		  "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
		  "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
		  "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
		  "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
		  "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
		  "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
		  "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
		  "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
		  "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
		  "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
		  "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
		  "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
		  "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
	.ctext	= "\x1c\x3b\x3a\x10\x2f\x77\x03\x86"
		  "\xe4\x83\x6c\x99\xe3\x70\xcf\x9b"
		  "\xea\x00\x80\x3f\x5e\x48\x23\x57"
		  "\xa4\xae\x12\xd4\x14\xa3\xe6\x3b"
		  "\x5d\x31\xe2\x76\xf8\xfe\x4a\x8d"
		  "\x66\xb3\x17\xf9\xac\x68\x3f\x44"
		  "\x68\x0a\x86\xac\x35\xad\xfc\x33"
		  "\x45\xbe\xfe\xcb\x4b\xb1\x88\xfd"
		  "\x57\x76\x92\x6c\x49\xa3\x09\x5e"
		  "\xb1\x08\xfd\x10\x98\xba\xec\x70"
		  "\xaa\xa6\x69\x99\xa7\x2a\x82\xf2"
		  "\x7d\x84\x8b\x21\xd4\xa7\x41\xb0"
		  "\xc5\xcd\x4d\x5f\xff\x9d\xac\x89"
		  "\xae\xba\x12\x29\x61\xd0\x3a\x75"
		  "\x71\x23\xe9\x87\x0f\x8a\xcf\x10"
		  "\x00\x02\x08\x87\x89\x14\x29\xca"
		  "\x2a\x3e\x7a\x7d\x7d\xf7\xb1\x03"
		  "\x55\x16\x5c\x8b\x9a\x6d\x0a\x7d"
		  "\xe8\xb0\x62\xc4\x50\x0d\xc4\xcd"
		  "\x12\x0c\x0f\x74\x18\xda\xe3\xd0"
		  "\xb5\x78\x1c\x34\x80\x3f\xa7\x54"
		  "\x21\xc7\x90\xdf\xe1\xde\x18\x34"
		  "\xf2\x80\xd7\x66\x7b\x32\x7f\x6c"
		  "\x8c\xd7\x55\x7e\x12\xac\x3a\x0f"
		  "\x93\xec\x05\xc5\x2e\x04\x93\xef"
		  "\x31\xa1\x2d\x3d\x92\x60\xf7\x9a"
		  "\x28\x9d\x6a\x37\x9b\xc7\x0c\x50"
		  "\x84\x14\x73\xd1\xa8\xcc\x81\xec"
		  "\x58\x3e\x96\x45\xe0\x7b\x8d\x96"
		  "\x70\x65\x5b\xa5\xbb\xcf\xec\xc6"
		  "\xdc\x39\x66\x38\x0a\xd8\xfe\xcb"
		  "\x17\xb6\xba\x02\x46\x9a\x02\x0a"
		  "\x84\xe1\x8e\x8f\x84\x25\x20\x70"
		  "\xc1\x3e\x9f\x1f\x28\x9b\xe5\x4f"
		  "\xbc\x48\x14\x57\x77\x8f\x61\x60"
		  "\x15\xe1\x32\x7a\x02\xb1\x40\xf1"
		  "\x50\x5e\xb3\x09\x32\x6d\x68\x37"
		  "\x8f\x83\x74\x59\x5c\x84\x9d\x84"
		  "\xf4\xc3\x33\xec\x44\x23\x88\x51"
		  "\x43\xcb\x47\xbd\x71\xc5\xed\xae"
		  "\x9b\xe6\x9a\x2f\xfe\xce\xb1\xbe"
		  "\xc9\xde\x24\x4f\xbe\x15\x99\x2b"
		  "\x11\xb7\x7c\x04\x0f\x12\xbd\x8f"
		  "\x6a\x97\x5a\x44\xa0\xf9\x0c\x29"
		  "\xa9\xab\xc3\xd4\xd8\x93\x92\x72"
		  "\x84\xc5\x87\x54\xcc\xe2\x94\x52"
		  "\x9f\x86\x14\xdc\xd2\xab\xa9\x91"
		  "\x92\x5f\xed\xc4\xae\x74\xff\xac"
		  "\x6e\x33\x3b\x93\xeb\x4a\xff\x04"
		  "\x79\xda\x9a\x41\x0e\x44\x50\xe0"
		  "\xdd\x7a\xe4\xc6\xe2\x91\x09\x00"
		  "\x57\x5d\xa4\x01\xfc\x07\x05\x9f"
		  "\x64\x5e\x8b\x7e\x9b\xfd\xef\x33"
		  "\x94\x30\x54\xff\x84\x01\x14\x93"
		  "\xc2\x7b\x34\x29\xea\xed\xb4\xed"
		  "\x53\x76\x44\x1a\x77\xed\x43\x85"
		  "\x1a\xd7\x7f\x16\xf5\x41\xdf\xd2"
		  "\x69\xd5\x0d\x6a\x5f\x14\xfb\x0a"
		  "\xab\x1c\xbb\x4c\x15\x50\xbe\x97"
		  "\xf7\xab\x40\x66\x19\x3c\x4c\xaa"
		  "\x77\x3d\xad\x38\x01\x4b\xd2\x09"
		  "\x2f\xa7\x55\xc8\x24\xbb\x5e\x54"
		  "\xc4\xf3\x6f\xfd\xa9\xfc\xea\x70"
		  "\xb9\xc6\xe6\x93\xe1\x48\xc1\x51",
	.len	= 512,
	}
};

/* 128bit */
struct cipher_testvec aes_cbc_tv_template_128[] = {
	{
	.key    = "\x06\xa9\x21\x40\x36\xb8\xa1\x5b"
		  "\x51\x2e\x03\xd5\x34\x12\x00\x06",
	.klen   = 16,
	.iv	= "\x3d\xaf\xba\x42\x9d\x9e\xb4\x30"
		  "\xb4\x22\xda\x80\x2c\x9f\xac\x41",
	.iv_out	= "\xe3\x53\x77\x9c\x10\x79\xae\xb8"
		  "\x27\x08\x94\x2d\xbe\x77\x18\x1a",
	.ptext	= "Single block msg",
	.ctext	= "\xe3\x53\x77\x9c\x10\x79\xae\xb8"
		  "\x27\x08\x94\x2d\xbe\x77\x18\x1a",
	.len	= 16,
	}
};
/* 192bit */
struct cipher_testvec aes_cbc_tv_template_192[] = {
	/* From NIST SP800-38A */
	{
	.key	= "\x8e\x73\xb0\xf7\xda\x0e\x64\x52"
		  "\xc8\x10\xf3\x2b\x80\x90\x79\xe5"
		  "\x62\xf8\xea\xd2\x52\x2c\x6b\x7b",
	.klen	= 24,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.iv_out	= "\x08\xb0\xe2\x79\x88\x59\x88\x81"
		  "\xd9\x20\xa9\xe6\x4f\x56\x15\xcd",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
	.ctext	= "\x4f\x02\x1d\xb2\x43\xbc\x63\x3d"
		  "\x71\x78\x18\x3a\x9f\xa0\x71\xe8"
		  "\xb4\xd9\xad\xa9\xad\x7d\xed\xf4"
		  "\xe5\xe7\x38\x76\x3f\x69\x14\x5a"
		  "\x57\x1b\x24\x20\x12\xfb\x7a\xe0"
		  "\x7f\xa9\xba\xac\x3d\xf1\x02\xe0"
		  "\x08\xb0\xe2\x79\x88\x59\x88\x81"
		  "\xd9\x20\xa9\xe6\x4f\x56\x15\xcd",
	.len	= 64,
	}
};
/* 256bit */
struct cipher_testvec aes_cbc_tv_template_256[] = {
	{
	.key	= "\x60\x3d\xeb\x10\x15\xca\x71\xbe"
		  "\x2b\x73\xae\xf0\x85\x7d\x77\x81"
		  "\x1f\x35\x2c\x07\x3b\x61\x08\xd7"
		  "\x2d\x98\x10\xa3\x09\x14\xdf\xf4",
	.klen	= 32,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.iv_out	= "\xb2\xeb\x05\xe2\xc3\x9b\xe9\xfc"
		  "\xda\x6c\x19\x07\x8c\x6a\x9d\x1b",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
	.ctext	= "\xf5\x8c\x4c\x04\xd6\xe5\xf1\xba"
		  "\x77\x9e\xab\xfb\x5f\x7b\xfb\xd6"
		  "\x9c\xfc\x4e\x96\x7e\xdb\x80\x8d"
		  "\x67\x9f\x77\x7b\xc6\x70\x2c\x7d"
		  "\x39\xf2\x33\x69\xa9\xd9\xba\xcf"
		  "\xa5\x30\xe2\x63\x04\x23\x14\x61"
		  "\xb2\xeb\x05\xe2\xc3\x9b\xe9\xfc"
		  "\xda\x6c\x19\x07\x8c\x6a\x9d\x1b",
	.len	= 64,
	}
};

struct cipher_testvec aes_ofb_tv_template_128[] = {
	{
	.key	= "\x2b\x7e\x15\x16\x28\xae\xd2\xa6"
		  "\xab\xf7\x15\x88\x09\xcf\x4f\x3c",
	.klen	= 16,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07\x08"
		  "\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
	.ctext	= "\x3b\x3f\xd9\x2e\xb7\x2d\xad\x20"
		  "\x33\x34\x49\xf8\xe8\x3c\xfb\x4a"
		  "\x77\x89\x50\x8d\x16\x91\x8f\x03"
		  "\xf5\x3c\x52\xda\xc5\x4e\xd8\x25"
		  "\x97\x40\x05\x1e\x9c\x5f\xec\xf6"
		  "\x43\x44\xf7\xa8\x22\x60\xed\xcc"
		  "\x30\x4c\x65\x28\xf6\x59\xc7\x78"
		  "\x66\xa5\x10\xd9\xc1\xd6\xae\x5e",
	.len	= 64,
	}
};

//openssl create
struct cipher_testvec aes_ofb_tv_template_192[] = {
	{
	.key	= "\x2b\x7e\x15\x16\x28\xae\xd2\xa6"
		  "\xab\xf7\x15\x88\x09\xcf\x4f\x3c"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.klen	= 24,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
	.ctext	= "\x6e\x29\x6a\xb1\x64\x8b\x7b\x81"
		  "\xfa\x62\x8f\xfa\xc6\x9f\x48\x6f"
		  "\x32\xe2\xaa\x04\x6a\x81\x04\xb8"
		  "\xc1\xe4\xe5\x1b\xb0\xc1\x89\xca"
		  "\x41\x6d\x43\xf1\x83\xf4\x9d\x90"
		  "\xbf\x68\xe6\xea\xd5\xed\x83\x1c"
		  "\xff\xf2\xf9\xfa\xf8\x3e\xba\x82"
		  "\x7e\xca\x94\x72\x64\x3f\x72\xdf",
	.len	= 64,
	}
};

struct cipher_testvec aes_ofb_tv_template_256[] = {
	{
	.key	= "\x2b\x7e\x15\x16\x28\xae\xd2\xa6"
		  "\xab\xf7\x15\x88\x09\xcf\x4f\x3c"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
		  "\x00\x01\x02\x03\x04\x05\x06\x07",
	.klen	= 32,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
	.ctext	= "\x36\x7d\xf9\x01\x2f\x31\xde\x8c"
		  "\x7f\xc1\x26\x1a\xbc\x8a\x35\xe5"
		  "\x00\x24\xad\xcb\x60\x5d\xb9\xea"
		  "\x12\xdd\x0b\xd2\x44\x2a\x24\x51"
		  "\x4f\x13\x1e\x7c\xa2\xad\xe9\x8c"
		  "\x55\x80\x75\xc6\x4d\xf2\x24\xde"
		  "\x30\xa0\xbb\xe7\x6d\xf8\xd1\x23"
		  "\x9d\x9f\xad\xd2\x9f\x87\x4f\x1c",
	.len	= 64,
	}
};


struct cipher_testvec aes_cfb_tv_template_128[] = {
	{ /* From NIST SP800-38A */
	.key	= "\x2b\x7e\x15\x16\x28\xae\xd2\xa6"
		  "\xab\xf7\x15\x88\x09\xcf\x4f\x3c",
	.klen	= 16,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
	.ctext	= "\x3b\x3f\xd9\x2e\xb7\x2d\xad\x20"
		  "\x33\x34\x49\xf8\xe8\x3c\xfb\x4a"
		  "\xc8\xa6\x45\x37\xa0\xb3\xa9\x3f"
		  "\xcd\xe3\xcd\xad\x9f\x1c\xe5\x8b"
		  "\x26\x75\x1f\x67\xa3\xcb\xb1\x40"
		  "\xb1\x80\x8c\xf1\x87\xa4\xf4\xdf"
		  "\xc0\x4b\x05\x35\x7c\x5d\x1c\x0e"
		  "\xea\xc4\xc6\x6f\x9f\xf7\xf2\xe6",
	.len	= 64,
	}
};

struct cipher_testvec aes_cfb_tv_template_192[] = {
	{
	.key	= "\x8e\x73\xb0\xf7\xda\x0e\x64\x52"
		  "\xc8\x10\xf3\x2b\x80\x90\x79\xe5"
		  "\x62\xf8\xea\xd2\x52\x2c\x6b\x7b",
	.klen	= 24,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
	.ctext	= "\xcd\xc8\x0d\x6f\xdd\xf1\x8c\xab"
		  "\x34\xc2\x59\x09\xc9\x9a\x41\x74"
		  "\x67\xce\x7f\x7f\x81\x17\x36\x21"
		  "\x96\x1a\x2b\x70\x17\x1d\x3d\x7a"
		  "\x2e\x1e\x8a\x1d\xd5\x9b\x88\xb1"
		  "\xc8\xe6\x0f\xed\x1e\xfa\xc4\xc9"
		  "\xc0\x5f\x9f\x9c\xa9\x83\x4f\xa0"
		  "\x42\xae\x8f\xba\x58\x4b\x09\xff",
	.len	= 64,
	}
};

struct cipher_testvec aes_cfb_tv_template_256[] = {
	{
	.key = "\x60\x3d\xeb\x10\x15\xca\x71\xbe"
		  "\x2b\x73\xae\xf0\x85\x7d\x77\x81"
		  "\x1f\x35\x2c\x07\x3b\x61\x08\xd7"
		  "\x2d\x98\x10\xa3\x09\x14\xdf\xf4",
	.klen	= 32,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
		  "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
		  "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
		  "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
		  "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
		  "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
		  "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
	.ctext	= "\xdc\x7e\x84\xbf\xda\x79\x16\x4b"
		  "\x7e\xcd\x84\x86\x98\x5d\x38\x60"
		  "\x39\xff\xed\x14\x3b\x28\xb1\xc8"
		  "\x32\x11\x3c\x63\x31\xe5\x40\x7b"
		  "\xdf\x10\x13\x24\x15\xe5\x4b\x92"
		  "\xa1\x3e\xd0\xa8\x26\x7a\xe2\xf9"
		  "\x75\xa3\x85\x74\x1a\xb9\xce\xf8"
		  "\x20\x31\x62\x3d\x55\xb1\xe4\x71",
	.len	= 64,
	}
};
//openssl create sm4_ofb template
struct cipher_testvec sm4_ofb_tv_template_128[] = {
	{ /* From NIST SP800-38A */
	.key	= "\x2b\x7e\x15\x16\x28\xae\xd2\xa6"
		  "\xab\xf7\x15\x88\x09\xcf\x4f\x3c",
	.klen	= 16,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a",
	.ctext	= "\xbc\x71\x0d\x76\x2d\x07\x0b\x26"
		  "\x36\x1d\xa8\x2b\x54\x56\x5e\x46",
	.len	= 16,
	}
};
//openssl create sm4_cfb template
struct cipher_testvec sm4_cfb_tv_template_128[] = {
	{ /* From NIST SP800-38A */
	.key	= "\x2b\x7e\x15\x16\x28\xae\xd2\xa6"
		  "\xab\xf7\x15\x88\x09\xcf\x4f\x3c",
	.klen	= 16,
	.iv	= "\x00\x01\x02\x03\x04\x05\x06\x07"
		  "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
	.ptext	= "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
		  "\xe9\x3d\x7e\x11\x73\x93\x17\x2a",
	.ctext	= "\xbc\x71\x0d\x76\x2d\x07\x0b\x26"
		  "\x36\x1d\xa8\x2b\x54\x56\x5e\x46",
	.len	= 16,
	}
};
#endif
